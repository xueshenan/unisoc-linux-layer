From cdcb976cc6ccd2a704bc243c8de14b34c7f57612 Mon Sep 17 00:00:00 2001
From: "etham.li" <etham.li@unisoc.com>
Date: Fri, 19 Aug 2022 08:51:58 +0800
Subject: [PATCH] Bug #1987074 - [sysvinit] Modify the src/bootlogd to adapt
 sprdtty

[root cause  ]:Modify the src/bootlogd to adapt sprdtty
[changes     ]:Modify the src/bootlogd to adapt sprdtty
[side effects]:no
[self test   ]:build pass
[download normally]:yes
[power on/off normally]:no
[do common repository/branch inspection]:no
[is there dependence]:no
[confirm dependent commit]:no
[board]:2.0
[test case]:build pass
[reviewers]:sam.hua

commit_template_version:v1
---
 src/bootlogd.c | 25 ++++++++++++++++++++++++-
 1 file changed, 24 insertions(+), 1 deletion(-)
 mode change 100644 => 100755 src/bootlogd.c

diff --git a/src/bootlogd.c b/src/bootlogd.c
old mode 100644
new mode 100755
index 8b07903..afc645a
--- a/src/bootlogd.c
+++ b/src/bootlogd.c
@@ -213,6 +213,22 @@ int findpty(int *master, int *slave, char *name)
 
 	return 0;
 }
+
+static int istty(const char *dev)
+{
+	int fd, ret;
+
+	fd = open(dev, O_RDONLY|O_NONBLOCK);
+	if (fd < 0)
+		return 0;
+
+	ret = isatty(fd);
+
+	close(fd);
+
+	return ret;
+}
+
 /*
  *	See if a console taken from the kernel command line maps
  *	to a character device we know about, and if we can open it.
@@ -229,7 +245,7 @@ int isconsole(char *s, char *res, int rlen)
 		l = strlen(c->cmdline);
 		if (sl <= l) continue;
 		p = s + l;
-		if (strncmp(s, c->cmdline, l) != 0 || !isdigit(*p))
+		if (strncmp(s, c->cmdline, l) != 0)
 			continue;
 		for (i = 0; i < 2; i++) {
 			snprintf(res, rlen, i ? c->dev1 : c->dev2, p);
@@ -240,6 +256,13 @@ int isconsole(char *s, char *res, int rlen)
 			}
 		}
 	}
+
+	/* Fallback: accept any TTY device */
+	snprintf(res, rlen, "/dev/%s", s);
+	if ((q = strchr(res, ',')) != NULL) *q = 0;
+	if (istty(res))
+		return 1;
+
 	return 0;
 }
 
-- 
2.17.1

