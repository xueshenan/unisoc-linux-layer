From 6bc994a672a95bbec33f27501b88462092a2621e Mon Sep 17 00:00:00 2001
From: "zhichao.zhang" <zhichao.zhang@unisoc.com>
Date: Fri, 4 Nov 2022 16:18:55 +0800
Subject: [PATCH] porting for unisoc omx components

---
 config/zynqultrascaleplus/gstomx.conf |  90 +++++--
 omx/Makefile.am                       |   6 +-
 omx/Makefile.in                       |  20 +-
 omx/gstomx.c                          |   2 +
 omx/gstomxh263enc.c                   |   6 +
 omx/gstomxvideodec.c                  |   6 +-
 omx/gstomxvp9dec.c                    |  99 +++++++
 omx/gstomxvp9dec.h                    |  59 ++++
 omx/meson.build                       |   1 +
 omx/openmax/OMX_Allegro.h             |  15 ++
 omx/openmax/OMX_IVCommon.h            |   7 +-
 omx/openmax/OMX_IndexExt.h            |   1 +
 omx/openmax/OMX_Video.h               |  26 +-
 omx/openmax/OMX_VideoExt.h            | 373 ++++++++++++++++++++++++++
 14 files changed, 674 insertions(+), 37 deletions(-)
 mode change 100644 => 100755 config/zynqultrascaleplus/gstomx.conf
 mode change 100644 => 100755 omx/Makefile.am
 mode change 100644 => 100755 omx/Makefile.in
 mode change 100644 => 100755 omx/gstomx.c
 mode change 100644 => 100755 omx/gstomxh263enc.c
 mode change 100644 => 100755 omx/gstomxvideodec.c
 create mode 100755 omx/gstomxvp9dec.c
 create mode 100755 omx/gstomxvp9dec.h
 mode change 100644 => 100755 omx/meson.build
 create mode 100755 omx/openmax/OMX_Allegro.h
 mode change 100644 => 100755 omx/openmax/OMX_IVCommon.h
 mode change 100644 => 100755 omx/openmax/OMX_IndexExt.h
 mode change 100644 => 100755 omx/openmax/OMX_Video.h
 mode change 100644 => 100755 omx/openmax/OMX_VideoExt.h

diff --git a/config/zynqultrascaleplus/gstomx.conf b/config/zynqultrascaleplus/gstomx.conf
old mode 100644
new mode 100755
index ca6f441..9ab25e3
--- a/config/zynqultrascaleplus/gstomx.conf
+++ b/config/zynqultrascaleplus/gstomx.conf
@@ -1,35 +1,89 @@
+[omxh264dec]
+type-name=GstOMXH264Dec
+core-name=/usr/lib/libsprd_omx_core.so
+component-name=OMX.sprd.h264.decoder
+rank=257
+in-port-index=0
+out-port-index=1
+hacks=ensure-buffer-count-actual;no-disable-outport;event-port-settings-changed-ndata-parameter-swap;event-port-settings-changed-port-0-to-1
+
 [omxh264enc]
 type-name=GstOMXH264Enc
-core-name=/usr/lib/libOMX.allegro.core.so.1
-component-name=OMX.allegro.h264.encoder
+core-name=/usr/lib/libsprd_omx_core.so
+component-name=OMX.sprd.h264.encoder
+rank=257
 in-port-index=0
 out-port-index=1
-rank=257
-hacks=ensure-buffer-count-actual
+hacks=ensure-buffer-count-actual;no-disable-outport;event-port-settings-changed-ndata-parameter-swap;event-port-settings-changed-port-0-to-1
 
-[omxh264dec]
-type-name=GstOMXH264Dec
-core-name=/usr/lib/libOMX.allegro.core.so.1
-component-name=OMX.allegro.h264.decoder
+[omxh265dec]
+type-name=GstOMXH265Dec
+core-name=/usr/lib/libsprd_omx_core.so
+component-name=OMX.sprd.h265.decoder
+rank=257
 in-port-index=0
 out-port-index=1
-rank=257
-hacks=pass-profile-to-decoder;pass-color-format-to-decoder;ensure-buffer-count-actual
+hacks=ensure-buffer-count-actual;no-disable-outport;event-port-settings-changed-ndata-parameter-swap;event-port-settings-changed-port-0-to-1
 
 [omxh265enc]
 type-name=GstOMXH265Enc
-core-name=/usr/lib/libOMX.allegro.core.so.1
-component-name=OMX.allegro.h265.encoder
+core-name=/usr/lib/libsprd_omx_core.so
+component-name=OMX.sprd.h265.encoder
+rank=257
+in-port-index=0
+out-port-index=1
+hacks=ensure-buffer-count-actual;no-disable-outport;event-port-settings-changed-ndata-parameter-swap;event-port-settings-changed-port-0-to-1
+
+[omxh263dec]
+type-name=GstOMXH263Dec
+core-name=/usr/lib/libsprd_omx_core.so
+component-name=OMX.sprd.h263.decoder
+rank=257
 in-port-index=0
 out-port-index=1
+hacks=ensure-buffer-count-actual;no-disable-outport;event-port-settings-changed-ndata-parameter-swap;event-port-settings-changed-port-0-to-1
+
+[omxh263enc]
+type-name=GstOMXH263Enc
+core-name=/usr/lib/libsprd_omx_core.so
+component-name=OMX.sprd.h263.encoder
 rank=257
-hacks=ensure-buffer-count-actual
+in-port-index=0
+out-port-index=1
+hacks=ensure-buffer-count-actual;no-disable-outport;event-port-settings-changed-ndata-parameter-swap;event-port-settings-changed-port-0-to-1
 
-[omxh265dec]
-type-name=GstOMXH265Dec
-core-name=/usr/lib/libOMX.allegro.core.so.1
-component-name=OMX.allegro.h265.decoder
+[omxmpeg4videodec]
+type-name=GstOMXMPEG4VideoDec
+core-name=/usr/lib/libsprd_omx_core.so
+component-name=OMX.sprd.mpeg4.decoder
+rank=257
+in-port-index=0
+out-port-index=1
+hacks=ensure-buffer-count-actual;no-disable-outport;event-port-settings-changed-ndata-parameter-swap;event-port-settings-changed-port-0-to-1
+
+[omxmpeg4videoenc]
+type-name=GstOMXMPEG4VideoEnc
+core-name=/usr/lib/libsprd_omx_core.so
+component-name=OMX.sprd.mpeg4.encoder
+rank=257
 in-port-index=0
 out-port-index=1
+hacks=ensure-buffer-count-actual;no-disable-outport;event-port-settings-changed-ndata-parameter-swap;event-port-settings-changed-port-0-to-1
+
+[omxvp8dec]
+type-name=GstOMXVP8Dec
+core-name=/usr/lib/libsprd_omx_core.so
+component-name=OMX.sprd.vpx.decoder
 rank=257
-hacks=pass-profile-to-decoder;pass-color-format-to-decoder;ensure-buffer-count-actual
+in-port-index=0
+out-port-index=1
+hacks=ensure-buffer-count-actual;no-disable-outport;event-port-settings-changed-ndata-parameter-swap;event-port-settings-changed-port-0-to-1
+
+[omxvp9dec]
+type-name=GstOMXVP9Dec
+core-name=/usr/lib/libsprd_omx_core.so
+component-name=OMX.sprd.vp9.decoder
+rank=257
+in-port-index=0
+out-port-index=1
+hacks=ensure-buffer-count-actual;no-disable-outport;event-port-settings-changed-ndata-parameter-swap;event-port-settings-changed-port-0-to-1
\ No newline at end of file
diff --git a/omx/Makefile.am b/omx/Makefile.am
old mode 100644
new mode 100755
index 3019040..77dc757
--- a/omx/Makefile.am
+++ b/omx/Makefile.am
@@ -1,8 +1,8 @@
 plugin_LTLIBRARIES = libgstomx.la
 
 if HAVE_VP8
-VP8_C_FILES=gstomxvp8dec.c
-VP8_H_FILES=gstomxvp8dec.h
+VP8_C_FILES=gstomxvp8dec.c gstomxvp9dec.c
+VP8_H_FILES=gstomxvp8dec.h gstomxvp9dec.h
 endif
 
 if HAVE_THEORA
@@ -110,5 +110,7 @@ EXTRA_DIST = \
 	openmax \
 	gstomxvp8dec.c \
 	gstomxvp8dec.h \
+	gstomxvp9dec.c \
+	gstomxvp9dec.h \
 	gstomxtheoradec.c \
 	gstomxtheoradec.h
diff --git a/omx/Makefile.in b/omx/Makefile.in
old mode 100644
new mode 100755
index fa082fe..273ee8b
--- a/omx/Makefile.in
+++ b/omx/Makefile.in
@@ -164,12 +164,12 @@ am__libgstomx_la_SOURCES_DIST = gstomx.c gstomxbufferpool.c \
 	gstomxaudiodec.c gstomxaudioenc.c gstomxmjpegdec.c \
 	gstomxmpeg4videodec.c gstomxmpeg2videodec.c gstomxh264dec.c \
 	gstomxh264utils.c gstomxh263dec.c gstomxwmvdec.c \
-	gstomxvp8dec.c gstomxtheoradec.c gstomxh265dec.c \
+	gstomxvp8dec.c gstomxvp9dec.c gstomxtheoradec.c gstomxh265dec.c \
 	gstomxh265enc.c gstomxh265utils.c gstomxmpeg4videoenc.c \
 	gstomxh264enc.c gstomxh263enc.c gstomxaacdec.c gstomxmp3dec.c \
 	gstomxmp3enc.c gstomxaacenc.c gstomxamrdec.c gstomxaudiosink.c \
 	gstomxanalogaudiosink.c gstomxhdmiaudiosink.c
-@HAVE_VP8_TRUE@am__objects_1 = libgstomx_la-gstomxvp8dec.lo
+@HAVE_VP8_TRUE@am__objects_1 = libgstomx_la-gstomxvp8dec.lo libgstomx_la-gstomxvp9dec.lo
 @HAVE_THEORA_TRUE@am__objects_2 = libgstomx_la-gstomxtheoradec.lo
 @HAVE_HEVC_TRUE@am__objects_3 = libgstomx_la-gstomxh265dec.lo \
 @HAVE_HEVC_TRUE@	libgstomx_la-gstomxh265enc.lo \
@@ -274,7 +274,7 @@ am__noinst_HEADERS_DIST = gstomx.h gstomxbufferpool.h gstomxvideo.h \
 	gstomxvideodec.h gstomxvideoenc.h gstomxaudiodec.h \
 	gstomxaudioenc.h gstomxmjpegdec.h gstomxmpeg2videodec.h \
 	gstomxmpeg4videodec.h gstomxh264dec.h gstomxh264utils.h \
-	gstomxh263dec.h gstomxwmvdec.h gstomxvp8dec.h \
+	gstomxh263dec.h gstomxwmvdec.h gstomxvp8dec.h gstomxvp9dec.h \
 	gstomxtheoradec.h gstomxh265dec.h gstomxh265enc.h \
 	gstomxh265utils.h gstomxmpeg4videoenc.h gstomxh264enc.h \
 	gstomxh263enc.h gstomxaacdec.h gstomxmp3dec.h gstomxmp3enc.h \
@@ -529,8 +529,8 @@ top_build_prefix = @top_build_prefix@
 top_builddir = @top_builddir@
 top_srcdir = @top_srcdir@
 plugin_LTLIBRARIES = libgstomx.la
-@HAVE_VP8_TRUE@VP8_C_FILES = gstomxvp8dec.c
-@HAVE_VP8_TRUE@VP8_H_FILES = gstomxvp8dec.h
+@HAVE_VP8_TRUE@VP8_C_FILES = gstomxvp8dec.c gstomxvp9dec.c
+@HAVE_VP8_TRUE@VP8_H_FILES = gstomxvp8dec.h gstomxvp9dec.h
 @HAVE_THEORA_TRUE@THEORA_C_FILES = gstomxtheoradec.c
 @HAVE_THEORA_TRUE@THEORA_H_FILES = gstomxtheoradec.h
 @HAVE_HEVC_TRUE@H265_C_FILES = \
@@ -630,6 +630,8 @@ EXTRA_DIST = \
 	openmax \
 	gstomxvp8dec.c \
 	gstomxvp8dec.h \
+	gstomxvp9dec.c \
+	gstomxvp9dec.h \
 	gstomxtheoradec.c \
 	gstomxtheoradec.h
 
@@ -740,6 +742,7 @@ distclean-compile:
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgstomx_la-gstomxvideodec.Plo@am__quote@ # am--include-marker
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgstomx_la-gstomxvideoenc.Plo@am__quote@ # am--include-marker
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgstomx_la-gstomxvp8dec.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgstomx_la-gstomxvp9dec.Plo@am__quote@ # am--include-marker
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgstomx_la-gstomxwmvdec.Plo@am__quote@ # am--include-marker
 
 $(am__depfiles_remade):
@@ -877,6 +880,13 @@ libgstomx_la-gstomxvp8dec.lo: gstomxvp8dec.c
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgstomx_la_CFLAGS) $(CFLAGS) -c -o libgstomx_la-gstomxvp8dec.lo `test -f 'gstomxvp8dec.c' || echo '$(srcdir)/'`gstomxvp8dec.c
 
+libgstomx_la-gstomxvp9dec.lo: gstomxvp9dec.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgstomx_la_CFLAGS) $(CFLAGS) -MT libgstomx_la-gstomxvp9dec.lo -MD -MP -MF $(DEPDIR)/libgstomx_la-gstomxvp9dec.Tpo -c -o libgstomx_la-gstomxvp9dec.lo `test -f 'gstomxvp9dec.c' || echo '$(srcdir)/'`gstomxvp9dec.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libgstomx_la-gstomxvp9dec.Tpo $(DEPDIR)/libgstomx_la-gstomxvp9dec.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='gstomxvp9dec.c' object='libgstomx_la-gstomxvp9dec.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgstomx_la_CFLAGS) $(CFLAGS) -c -o libgstomx_la-gstomxvp9dec.lo `test -f 'gstomxvp9dec.c' || echo '$(srcdir)/'`gstomxvp9dec.c
+
 libgstomx_la-gstomxtheoradec.lo: gstomxtheoradec.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgstomx_la_CFLAGS) $(CFLAGS) -MT libgstomx_la-gstomxtheoradec.lo -MD -MP -MF $(DEPDIR)/libgstomx_la-gstomxtheoradec.Tpo -c -o libgstomx_la-gstomxtheoradec.lo `test -f 'gstomxtheoradec.c' || echo '$(srcdir)/'`gstomxtheoradec.c
 @am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libgstomx_la-gstomxtheoradec.Tpo $(DEPDIR)/libgstomx_la-gstomxtheoradec.Plo
diff --git a/omx/gstomx.c b/omx/gstomx.c
old mode 100644
new mode 100755
index 038ce32..230a218
--- a/omx/gstomx.c
+++ b/omx/gstomx.c
@@ -36,6 +36,7 @@
 #include "gstomxh263dec.h"
 #include "gstomxh265dec.h"
 #include "gstomxvp8dec.h"
+#include "gstomxvp9dec.h"
 #include "gstomxtheoradec.h"
 #include "gstomxwmvdec.h"
 #include "gstomxmpeg4videoenc.h"
@@ -3419,6 +3420,7 @@ static const GGetTypeFunction types[] = {
   gst_omx_amr_dec_get_type
 #ifdef HAVE_VP8
       , gst_omx_vp8_dec_get_type
+      , gst_omx_vp9_dec_get_type
 #endif
 #ifdef HAVE_THEORA
       , gst_omx_theora_dec_get_type
diff --git a/omx/gstomxh263enc.c b/omx/gstomxh263enc.c
old mode 100644
new mode 100755
index 9e80bfb..40f72ae
--- a/omx/gstomxh263enc.c
+++ b/omx/gstomxh263enc.c
@@ -165,6 +165,9 @@ gst_omx_h263_enc_set_format (GstOMXVideoEnc * enc, GstOMXPort * port,
         case 40:
           param.eLevel = OMX_VIDEO_H263Level40;
           break;
+        case 45:
+          param.eLevel = OMX_VIDEO_H263Level45;
+          break;
         case 50:
           param.eLevel = OMX_VIDEO_H263Level50;
           break;
@@ -279,6 +282,9 @@ gst_omx_h263_enc_get_caps (GstOMXVideoEnc * enc, GstOMXPort * port,
       case OMX_VIDEO_H263Level40:
         level = 40;
         break;
+      case OMX_VIDEO_H263Level45:
+        level = 45;
+        break;
       case OMX_VIDEO_H263Level50:
         level = 50;
         break;
diff --git a/omx/gstomxvideodec.c b/omx/gstomxvideodec.c
old mode 100644
new mode 100755
index abe6e30..8c9822e
--- a/omx/gstomxvideodec.c
+++ b/omx/gstomxvideodec.c
@@ -1264,9 +1264,9 @@ gst_omx_video_dec_reconfigure_output_port (GstOMXVideoDec * self)
       gst_caps_set_features (state->caps, 0,
           gst_caps_features_new (GST_CAPS_FEATURE_MEMORY_GL_MEMORY, NULL));
 
-      /* try to negotiate with caps feature */
-      if (!gst_video_decoder_negotiate (GST_VIDEO_DECODER (self))) {
-
+      // if (!gst_video_decoder_negotiate (GST_VIDEO_DECODER (self))) {
+      printf("gstomxvideodec.c gst_omx_video_dec_reconfigure_output_port line: %d, do not call negotiate for sprd omx components on OMX_EventPortSettingsChanged Error.\n", __LINE__);
+      {
         GST_DEBUG_OBJECT (self,
             "Failed to negotiate with feature %s",
             GST_CAPS_FEATURE_MEMORY_GL_MEMORY);
diff --git a/omx/gstomxvp9dec.c b/omx/gstomxvp9dec.c
new file mode 100755
index 0000000..d50093f
--- /dev/null
+++ b/omx/gstomxvp9dec.c
@@ -0,0 +1,99 @@
+/*
+ * Copyright (C) 2013, Collabora Ltd.
+ *   Author: Sebastian Dr枚ge <sebastian.droege@collabora.co.uk>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation
+ * version 2.1 of the License.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301 USA
+ *
+ */
+
+#ifdef HAVE_CONFIG_H
+#include "config.h"
+#endif
+
+#include <gst/gst.h>
+
+#include "gstomxvp9dec.h"
+
+GST_DEBUG_CATEGORY_STATIC (gst_omx_vp9_dec_debug_category);
+#define GST_CAT_DEFAULT gst_omx_vp9_dec_debug_category
+
+/* prototypes */
+static gboolean gst_omx_vp9_dec_is_format_change (GstOMXVideoDec * dec,
+    GstOMXPort * port, GstVideoCodecState * state);
+static gboolean gst_omx_vp9_dec_set_format (GstOMXVideoDec * dec,
+    GstOMXPort * port, GstVideoCodecState * state);
+
+enum
+{
+  PROP_0
+};
+
+/* class initialization */
+
+#define DEBUG_INIT \
+  GST_DEBUG_CATEGORY_INIT (gst_omx_vp9_dec_debug_category, "omxvp9dec", 0, \
+      "debug category for gst-omx video decoder base class");
+
+G_DEFINE_TYPE_WITH_CODE (GstOMXVP9Dec, gst_omx_vp9_dec,
+    GST_TYPE_OMX_VIDEO_DEC, DEBUG_INIT);
+
+static void
+gst_omx_vp9_dec_class_init (GstOMXVP9DecClass * klass)
+{
+  GstOMXVideoDecClass *videodec_class = GST_OMX_VIDEO_DEC_CLASS (klass);
+  GstElementClass *element_class = GST_ELEMENT_CLASS (klass);
+
+  videodec_class->is_format_change =
+      GST_DEBUG_FUNCPTR (gst_omx_vp9_dec_is_format_change);
+  videodec_class->set_format = GST_DEBUG_FUNCPTR (gst_omx_vp9_dec_set_format);
+
+  videodec_class->cdata.default_sink_template_caps = "video/x-vp9, "
+      "width=(int) [1,MAX], " "height=(int) [1,MAX]";
+
+  gst_element_class_set_static_metadata (element_class,
+      "OpenMAX VP9 Video Decoder",
+      "Codec/Decoder/Video",
+      "Decode VP9 video streams",
+      "Sebastian Dr枚ge <sebastian.droege@collabora.co.uk>");
+
+  gst_omx_set_default_role (&videodec_class->cdata, "video_decoder.vp9");
+}
+
+static void
+gst_omx_vp9_dec_init (GstOMXVP9Dec * self)
+{
+}
+
+static gboolean
+gst_omx_vp9_dec_is_format_change (GstOMXVideoDec * dec,
+    GstOMXPort * port, GstVideoCodecState * state)
+{
+  return FALSE;
+}
+
+static gboolean
+gst_omx_vp9_dec_set_format (GstOMXVideoDec * dec, GstOMXPort * port,
+    GstVideoCodecState * state)
+{
+  gboolean ret;
+  OMX_PARAM_PORTDEFINITIONTYPE port_def;
+
+  gst_omx_port_get_port_definition (port, &port_def);
+  port_def.format.video.eCompressionFormat =
+      (OMX_VIDEO_CODINGTYPE) OMX_VIDEO_CodingVP9;
+  ret = gst_omx_port_update_port_definition (port, &port_def) == OMX_ErrorNone;
+
+  return ret;
+}
\ No newline at end of file
diff --git a/omx/gstomxvp9dec.h b/omx/gstomxvp9dec.h
new file mode 100755
index 0000000..3e5afdc
--- /dev/null
+++ b/omx/gstomxvp9dec.h
@@ -0,0 +1,59 @@
+/*
+ * Copyright (C) 2013, Collabora Ltd.
+ *   Author: Sebastian Dr枚ge <sebastian.droege@collabora.co.uk>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation
+ * version 2.1 of the License.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301 USA
+ *
+ */
+
+#ifndef __GST_OMX_VP9_DEC_H__
+#define __GST_OMX_VP9_DEC_H__
+
+#include <gst/gst.h>
+#include "gstomxvideodec.h"
+
+G_BEGIN_DECLS
+
+#define GST_TYPE_OMX_VP9_DEC \
+  (gst_omx_vp9_dec_get_type())
+#define GST_OMX_VP9_DEC(obj) \
+  (G_TYPE_CHECK_INSTANCE_CAST((obj),GST_TYPE_OMX_VP9_DEC,GstOMXVP9Dec))
+#define GST_OMX_VP9_DEC_CLASS(klass) \
+  (G_TYPE_CHECK_CLASS_CAST((klass),GST_TYPE_OMX_VP9_DEC,GstOMXVP9DecClass))
+#define GST_OMX_VP9_DEC_GET_CLASS(obj) \
+  (G_TYPE_INSTANCE_GET_CLASS((obj),GST_TYPE_OMX_VP9_DEC,GstOMXVP9DecClass))
+#define GST_IS_OMX_VP9_DEC(obj) \
+  (G_TYPE_CHECK_INSTANCE_TYPE((obj),GST_TYPE_OMX_VP9_DEC))
+#define GST_IS_OMX_VP9_DEC_CLASS(obj) \
+  (G_TYPE_CHECK_CLASS_TYPE((klass),GST_TYPE_OMX_VP9_DEC))
+
+typedef struct _GstOMXVP9Dec GstOMXVP9Dec;
+typedef struct _GstOMXVP9DecClass GstOMXVP9DecClass;
+
+struct _GstOMXVP9Dec
+{
+  GstOMXVideoDec parent;
+};
+
+struct _GstOMXVP9DecClass
+{
+  GstOMXVideoDecClass parent_class;
+};
+
+GType gst_omx_vp9_dec_get_type (void);
+
+G_END_DECLS
+
+#endif /* __GST_OMX_VP9_DEC_H__ */
diff --git a/omx/meson.build b/omx/meson.build
old mode 100644
new mode 100755
index b68cc55..47e1090
--- a/omx/meson.build
+++ b/omx/meson.build
@@ -30,6 +30,7 @@ extra_c_args = []
 
 if have_omx_vp8
   omx_sources += 'gstomxvp8dec.c'
+  omx_sources += 'gstomxvp9dec.c'
 endif
 
 if have_omx_theora
diff --git a/omx/openmax/OMX_Allegro.h b/omx/openmax/OMX_Allegro.h
new file mode 100755
index 0000000..0a90ac6
--- /dev/null
+++ b/omx/openmax/OMX_Allegro.h
@@ -0,0 +1,15 @@
+#ifndef OMX_Allegro_h
+#define OMX_Allegro_h
+
+#ifdef __cplusplus
+extern "C" {
+#endif /* __cplusplus */
+
+
+
+#ifdef __cplusplus
+}
+#endif /* __cplusplus */
+
+#endif
+/* File EOF */
\ No newline at end of file
diff --git a/omx/openmax/OMX_IVCommon.h b/omx/openmax/OMX_IVCommon.h
old mode 100644
new mode 100755
index 4c4995c..95ebe36
--- a/omx/openmax/OMX_IVCommon.h
+++ b/omx/openmax/OMX_IVCommon.h
@@ -130,9 +130,14 @@ typedef enum OMX_COLOR_FORMATTYPE {
     OMX_COLOR_Format18BitBGR666,
     OMX_COLOR_Format24BitARGB6666,
     OMX_COLOR_Format24BitABGR6666,
+    OMX_ALG_COLOR_FormatYUV420SemiPlanar10bitPacked,
+    OMX_ALG_COLOR_FormatYUV422SemiPlanar10bitPacked,
     OMX_COLOR_FormatKhronosExtensions = 0x6F000000, /**< Reserved region for introducing Khronos Standard Extensions */ 
     OMX_COLOR_FormatVendorStartUnused = 0x7F000000, /**< Reserved region for introducing Vendor Extensions */
-    OMX_COLOR_FormatMax = 0x7FFFFFFF
+    OMX_COLOR_FormatAndroidOpaque = 0x7F000789,
+    OMX_COLOR_FormatYUV420Flexible = 0x7F420888,
+    OMX_SPRD_COLOR_FormatYVU420SemiPlanar = 0x7FD00001,
+	OMX_COLOR_FormatMax = 0x7FFFFFFF
 } OMX_COLOR_FORMATTYPE;
 
 
diff --git a/omx/openmax/OMX_IndexExt.h b/omx/openmax/OMX_IndexExt.h
old mode 100644
new mode 100755
index 8d05faa..03b5307
--- a/omx/openmax/OMX_IndexExt.h
+++ b/omx/openmax/OMX_IndexExt.h
@@ -66,6 +66,7 @@ typedef enum OMX_INDEXEXTTYPE {
     OMX_IndexParamNalStreamFormatSupported,         /**< reference: OMX_NALSTREAMFORMATTYPE */
     OMX_IndexParamNalStreamFormat,                  /**< reference: OMX_NALSTREAMFORMATTYPE */
     OMX_IndexParamNalStreamFormatSelect,            /**< reference: OMX_NALSTREAMFORMATTYPE */
+    OMX_IndexParamVideoHevc,                        /**< reference: OMX_VIDEO_PARAM_HEVCTYPE */
 
     /* Image & Video common configurations */
     OMX_IndexExtCommonStartUnused = OMX_IndexKhronosExtensions + 0x00700000,
diff --git a/omx/openmax/OMX_Video.h b/omx/openmax/OMX_Video.h
old mode 100644
new mode 100755
index 163e450..3eb9f18
--- a/omx/openmax/OMX_Video.h
+++ b/omx/openmax/OMX_Video.h
@@ -68,6 +68,9 @@ typedef enum OMX_VIDEO_CODINGTYPE {
     OMX_VIDEO_CodingRV,         /**< all versions of Real Video */
     OMX_VIDEO_CodingAVC,        /**< H.264/AVC */
     OMX_VIDEO_CodingMJPEG,      /**< Motion JPEG */
+    OMX_VIDEO_CodingHEVC,       /**< H.265/HEVC */
+    OMX_VIDEO_CodingVP8,        /**< VP8 */
+    OMX_VIDEO_CodingVP9,        /**< Google VP9 */
     OMX_VIDEO_CodingKhronosExtensions = 0x6F000000, /**< Reserved region for introducing Khronos Standard Extensions */ 
     OMX_VIDEO_CodingVendorStartUnused = 0x7F000000, /**< Reserved region for introducing Vendor Extensions */
     OMX_VIDEO_CodingMax = 0x7FFFFFFF
@@ -219,6 +222,7 @@ typedef enum OMX_VIDEO_CONTROLRATETYPE {
     OMX_Video_ControlRateConstant,
     OMX_Video_ControlRateVariableSkipFrames,
     OMX_Video_ControlRateConstantSkipFrames,
+    OMX_ALG_Video_ControlRateLowLatency,
     OMX_Video_ControlRateKhronosExtensions = 0x6F000000, /**< Reserved region for introducing Khronos Standard Extensions */ 
     OMX_Video_ControlRateVendorStartUnused = 0x7F000000, /**< Reserved region for introducing Vendor Extensions */
     OMX_Video_ControlRateMax = 0x7FFFFFFF
@@ -610,14 +614,16 @@ typedef enum OMX_VIDEO_MPEG4PROFILETYPE {
  * sizes, bit rates, decoder frame rates.  No need 
  */
 typedef enum OMX_VIDEO_MPEG4LEVELTYPE {
-    OMX_VIDEO_MPEG4Level0  = 0x01,   /**< Level 0 */   
-    OMX_VIDEO_MPEG4Level0b = 0x02,   /**< Level 0b */   
-    OMX_VIDEO_MPEG4Level1  = 0x04,   /**< Level 1 */ 
-    OMX_VIDEO_MPEG4Level2  = 0x08,   /**< Level 2 */ 
-    OMX_VIDEO_MPEG4Level3  = 0x10,   /**< Level 3 */ 
-    OMX_VIDEO_MPEG4Level4  = 0x20,   /**< Level 4 */  
-    OMX_VIDEO_MPEG4Level4a = 0x40,   /**< Level 4a */  
-    OMX_VIDEO_MPEG4Level5  = 0x80,   /**< Level 5 */  
+    OMX_VIDEO_MPEG4Level0  = 0x01,   /**< Level 0 */
+    OMX_VIDEO_MPEG4Level0b = 0x02,   /**< Level 0b */
+    OMX_VIDEO_MPEG4Level1  = 0x04,   /**< Level 1 */
+    OMX_VIDEO_MPEG4Level2  = 0x08,   /**< Level 2 */
+    OMX_VIDEO_MPEG4Level3  = 0x10,   /**< Level 3 */
+    OMX_VIDEO_MPEG4Level3b = 0x18,   /**< Level 3a */
+    OMX_VIDEO_MPEG4Level4  = 0x20,   /**< Level 4 */
+    OMX_VIDEO_MPEG4Level4a = 0x40,   /**< Level 4a */
+    OMX_VIDEO_MPEG4Level5  = 0x80,   /**< Level 5 */
+    OMX_VIDEO_MPEG4Level6  = 0x100,  /**< Level 6 */
     OMX_VIDEO_MPEG4LevelKhronosExtensions = 0x6F000000, /**< Reserved region for introducing Khronos Standard Extensions */ 
     OMX_VIDEO_MPEG4LevelVendorStartUnused = 0x7F000000, /**< Reserved region for introducing Vendor Extensions */
     OMX_VIDEO_MPEG4LevelMax = 0x7FFFFFFF  
@@ -798,6 +804,10 @@ typedef enum OMX_VIDEO_AVCLEVELTYPE {
     OMX_VIDEO_AVCLevel42  = 0x2000,   /**< Level 4.2 */
     OMX_VIDEO_AVCLevel5   = 0x4000,   /**< Level 5 */
     OMX_VIDEO_AVCLevel51  = 0x8000,   /**< Level 5.1 */
+    OMX_ALG_VIDEO_AVCLevel52 = 0x10000,
+    OMX_ALG_VIDEO_AVCLevel60 = 0x20000,
+    OMX_ALG_VIDEO_AVCLevel61 = 0x40000,
+    OMX_ALG_VIDEO_AVCLevel62 = 0x80000,
     OMX_VIDEO_AVCLevelKhronosExtensions = 0x6F000000, /**< Reserved region for introducing Khronos Standard Extensions */ 
     OMX_VIDEO_AVCLevelVendorStartUnused = 0x7F000000, /**< Reserved region for introducing Vendor Extensions */
     OMX_VIDEO_AVCLevelMax = 0x7FFFFFFF  
diff --git a/omx/openmax/OMX_VideoExt.h b/omx/openmax/OMX_VideoExt.h
old mode 100644
new mode 100755
index a9b5d45..4e634e7
--- a/omx/openmax/OMX_VideoExt.h
+++ b/omx/openmax/OMX_VideoExt.h
@@ -60,6 +60,379 @@ typedef struct OMX_NALSTREAMFORMATTYPE{
 } OMX_NALSTREAMFORMATTYPE;
 
 
+typedef enum OMX_VIDEO_HEVCPROFILETYPE {
+    OMX_VIDEO_HEVCProfileUnknown = 0x0,
+    OMX_VIDEO_HEVCProfileMain = 0x1,
+    OMX_VIDEO_HEVCProfileMain10 = 0x2,
+    OMX_VIDEO_HEVCProfileMax = 0x7FFFFFFF
+} OMX_VIDEO_HEVCPROFILETYPE;
+
+
+typedef enum OMX_VIDEO_HEVCLEVELTYPE {
+    OMX_VIDEO_HEVCLevelUnknown = 0x0,
+    OMX_VIDEO_HEVCMainTierLevel1 = 0x1,
+    OMX_VIDEO_HEVCHighTierLevel1 = 0x2,
+    OMX_VIDEO_HEVCMainTierLevel2 = 0x4,
+    OMX_VIDEO_HEVCHighTierLevel2 = 0x8,
+    OMX_VIDEO_HEVCMainTierLevel21 = 0x10,
+    OMX_VIDEO_HEVCHighTierLevel21 = 0x20,
+    OMX_VIDEO_HEVCMainTierLevel3 = 0x40,
+    OMX_VIDEO_HEVCHighTierLevel3 = 0x80,
+    OMX_VIDEO_HEVCMainTierLevel31 = 0x100,
+    OMX_VIDEO_HEVCHighTierLevel31 = 0x200,
+    OMX_VIDEO_HEVCMainTierLevel4 = 0x400,
+    OMX_VIDEO_HEVCHighTierLevel4 = 0x800,
+    OMX_VIDEO_HEVCMainTierLevel41 = 0x1000,
+    OMX_VIDEO_HEVCHighTierLevel41 = 0x2000,
+    OMX_VIDEO_HEVCMainTierLevel5 = 0x4000,
+    OMX_VIDEO_HEVCHighTierLevel5 = 0x8000,
+    OMX_VIDEO_HEVCMainTierLevel51 = 0x10000,
+    OMX_VIDEO_HEVCHighTierLevel51 = 0x20000,
+    OMX_VIDEO_HEVCMainTierLevel52 = 0x40000,
+    OMX_VIDEO_HEVCHighTierLevel52 = 0x80000,
+    OMX_VIDEO_HEVCMainTierLevel6 = 0x100000,
+    OMX_VIDEO_HEVCHighTierLevel6 = 0x200000,
+    OMX_VIDEO_HEVCMainTierLevel61 = 0x400000,
+    OMX_VIDEO_HEVCHighTierLevel61 = 0x800000,
+    OMX_VIDEO_HEVCMainTierLevel62 = 0x1000000,
+    OMX_VIDEO_HEVCHighTierLevel62 = 0x2000000,
+    OMX_VIDEO_HEVCHighTiermax = 0x7FFFFFFF,
+} OMX_VIDEO_HEVCLEVELTYPE;
+
+
+typedef enum OMX_ALG_VIDEO_HEVCLEVELTYPE {
+    OMX_ALG_VIDEO_HEVCLevelUnknown = 0x4000000,
+} OMX_ALG_VIDEO_HEVCLEVELTYPE;
+
+
+typedef enum OMX_ALG_BUF_MODE {
+    OMX_ALG_BUF_NORMAL,
+    OMX_ALG_BUF_DMA,
+    OMX_ALG_BUF_MAX_ENUM = 0x7FFFFFFF,
+} OMX_ALG_BUF_MODE;
+
+
+typedef enum OMX_ALG_QP_MODE {
+    OMX_ALG_UNIFORM_QP,
+    OMX_ALG_AUTO_QP,
+    OMX_ALG_ROI_QP,
+} OMX_ALG_QP_MODE;
+
+
+typedef enum OMX_ALG_GOP_MODE {
+    OMX_ALG_GOP_MODE_DEFAULT,
+    OMX_ALG_GOP_MODE_PYRAMIDAL,
+    OMX_ALG_GOP_MODE_ADAPTIVE,
+    OMX_ALG_GOP_MODE_LOW_DELAY_P,
+    OMX_ALG_GOP_MODE_LOW_DELAY_B,
+} OMX_ALG_GOP_MODE;
+
+
+typedef enum OMX_ALG_GRD_MODE {
+    OMX_ALG_GDR_OFF,
+    OMX_ALG_GDR_VERTICAL,
+    OMX_ALG_GDR_HORIZONTAL,
+} OMX_ALG_GRD_MODE;
+
+
+typedef enum OMX_ALG_SCL_MODE {
+    OMX_ALG_SCL_DEFAULT,
+    OMX_ALG_SCL_FLAT,
+} OMX_ALG_SCL_MODE;
+
+
+typedef enum OMX_ALG_ASPECT_RATIO_MODE {
+    OMX_ALG_ASPECT_RATIO_AUTO,
+    OMX_ALG_ASPECT_RATIO_4_3,
+    OMX_ALG_ASPECT_RATIO_16_9,
+    OMX_ALG_ASPECT_RATIO_NONE,
+} OMX_ALG_ASPECT_RATIO_MODE;
+
+
+typedef enum OMX_ALG_ROI_QUALITY_MODE {
+    OMX_ALG_ROI_QUALITY_HIGH,
+    OMX_ALG_ROI_QUALITY_MEDIUM,
+    OMX_ALG_ROI_QUALITY_LOW,
+    OMX_ALG_ROI_QUALITY_DONT_CARE,
+} OMX_ALG_ROI_QUALITY_MODE;
+
+
+typedef enum OMX_ALG_VIDEO_HEVCLoopFilter_MODE {
+    OMX_ALG_VIDEO_HEVCLoopFilterEnable,
+    OMX_ALG_VIDEO_HEVCLoopFilterDisable,
+    OMX_ALG_VIDEO_HEVCLoopFilterDisableCrossSlice,
+    OMX_ALG_VIDEO_HEVCLoopFilterDisableCrossTile,
+    OMX_ALG_VIDEO_HEVCLoopFilterDisableCrossSliceAndTile,
+} OMX_ALG_VIDEO_HEVCLoopFilter_MODE;
+
+
+typedef struct OMX_ALG_VIDEO_PARAM_INTERNAL_ENTROPY_BUFFERS {
+    OMX_U32 nSize;
+    OMX_VERSIONTYPE nVersion;
+    OMX_U32 nPortIndex;
+    OMX_U32 nNumInternalEntropyBuffers;
+} OMX_ALG_VIDEO_PARAM_INTERNAL_ENTROPY_BUFFERS;
+
+
+typedef struct OMX_ALG_PORT_PARAM_BUFFER_MODE {
+    OMX_U32 nSize;
+    OMX_VERSIONTYPE nVersion;
+    OMX_U32 nPortIndex;
+    OMX_U32 eMode;
+} OMX_ALG_PORT_PARAM_BUFFER_MODE;
+
+
+typedef struct OMX_ALG_PARAM_REPORTED_LATENCY {
+    OMX_U32 nSize;
+    OMX_VERSIONTYPE nVersion;
+    OMX_U32 nLatency;
+} OMX_ALG_PARAM_REPORTED_LATENCY;
+
+
+typedef struct OMX_ALG_VIDEO_PARAM_QUANTIZATION_CONTROL {
+    OMX_U32 nSize;
+    OMX_VERSIONTYPE nVersion;
+    OMX_U32 nPortIndex;
+    OMX_U32 eQpControlMode;
+} OMX_ALG_VIDEO_PARAM_QUANTIZATION_CONTROL;
+
+typedef struct OMX_ALG_VIDEO_PARAM_QUANTIZATION_EXTENSION {
+    OMX_U32 nSize;
+    OMX_VERSIONTYPE nVersion;
+    OMX_U32 nPortIndex;
+    OMX_U32 nQpMin;
+    OMX_U32 nQpMax;
+} OMX_ALG_VIDEO_PARAM_QUANTIZATION_EXTENSION;
+
+
+typedef struct OMX_ALG_VIDEO_PARAM_GOP_CONTROL {
+    OMX_U32 nSize;
+    OMX_VERSIONTYPE nVersion;
+    OMX_U32 nPortIndex;
+    OMX_U32 eGopControlMode;
+    OMX_U32 eGdrMode;
+} OMX_ALG_VIDEO_PARAM_GOP_CONTROL;
+
+
+typedef struct OMX_ALG_VIDEO_PARAM_CODED_PICTURE_BUFFER {
+    OMX_U32 nSize;
+    OMX_VERSIONTYPE nVersion;
+    OMX_U32 nPortIndex;
+    OMX_U32 nCodedPictureBufferSize;
+    OMX_U32 nInitialRemovalDelay;
+} OMX_ALG_VIDEO_PARAM_CODED_PICTURE_BUFFER;
+
+
+typedef struct OMX_ALG_VIDEO_PARAM_SCALING_LIST {
+    OMX_U32 nSize;
+    OMX_VERSIONTYPE nVersion;
+    OMX_U32 nPortIndex;
+    OMX_U32 eScalingListMode;
+} OMX_ALG_VIDEO_PARAM_SCALING_LIST;
+
+
+typedef struct OMX_ALG_VIDEO_PARAM_LOW_BANDWIDTH {
+    OMX_U32 nSize;
+    OMX_VERSIONTYPE nVersion;
+    OMX_U32 nPortIndex;
+    OMX_U32 bEnableLowBandwidth;
+} OMX_ALG_VIDEO_PARAM_LOW_BANDWIDTH;
+
+
+typedef struct OMX_ALG_VIDEO_PARAM_MAX_BITRATE {
+    OMX_U32 nSize;
+    OMX_VERSIONTYPE nVersion;
+    OMX_U32 nPortIndex;
+    OMX_U32 nMaxBitrate;
+} OMX_ALG_VIDEO_PARAM_MAX_BITRATE;
+
+
+typedef struct OMX_ALG_VIDEO_PARAM_ASPECT_RATIO {
+    OMX_U32 nSize;
+    OMX_VERSIONTYPE nVersion;
+    OMX_U32 nPortIndex;
+    OMX_U32 eAspectRatio;
+} OMX_ALG_VIDEO_PARAM_ASPECT_RATIO;
+
+
+typedef struct OMX_ALG_VIDEO_PARAM_FILLER_DATA {
+    OMX_U32 nSize;
+    OMX_VERSIONTYPE nVersion;
+    OMX_U32 nPortIndex;
+    OMX_U32 bDisableFillerData;
+} OMX_ALG_VIDEO_PARAM_FILLER_DATA;
+
+
+typedef struct OMX_ALG_VIDEO_PARAM_SLICES {
+    OMX_U32 nSize;
+    OMX_VERSIONTYPE nVersion;
+    OMX_U32 nPortIndex;
+    OMX_U32 nNumSlices;
+    OMX_U32 nSlicesSize;
+    OMX_U32 bDependentSlices;
+} OMX_ALG_VIDEO_PARAM_SLICES;
+
+
+typedef struct OMX_ALG_VIDEO_CONFIG_REGION_OF_INTEREST {
+    OMX_U32 nSize;
+    OMX_VERSIONTYPE nVersion;
+    OMX_U32 nPortIndex;
+    OMX_U32 nLeft;
+    OMX_U32 nTop;
+    OMX_U32 nWidth;
+    OMX_U32 nHeight;
+    OMX_U32 eQuality;
+} OMX_ALG_VIDEO_CONFIG_REGION_OF_INTEREST;
+
+typedef enum OMX_ALG_VIDEO_HEVCPROFILETYPE {
+  OMX_ALG_VIDEO_HEVCProfileMain = 0x00000001, /**< Main profile */
+  OMX_ALG_VIDEO_HEVCProfileMain10, /**< Main 10 profile */
+  OMX_ALG_VIDEO_HEVCProfileMainStill, /**< Main still profile */
+  OMX_ALG_VIDEO_HEVCProfileMonochrome,
+  OMX_ALG_VIDEO_HEVCProfileMonochrome10,
+  OMX_ALG_VIDEO_HEVCProfileMonochrome12,
+  OMX_ALG_VIDEO_HEVCProfileMonochrome16,
+  OMX_ALG_VIDEO_HEVCProfileMain12,
+  OMX_ALG_VIDEO_HEVCProfileMain422,
+  OMX_ALG_VIDEO_HEVCProfileMain422_10,
+  OMX_ALG_VIDEO_HEVCProfileMain422_12,
+  OMX_ALG_VIDEO_HEVCProfileMain444,
+  OMX_ALG_VIDEO_HEVCProfileMain444_10,
+  OMX_ALG_VIDEO_HEVCProfileMain444_12,
+  OMX_ALG_VIDEO_HEVCProfileMain_Intra,
+  OMX_ALG_VIDEO_HEVCProfileMain10_Intra,
+  OMX_ALG_VIDEO_HEVCProfileMain12_Intra,
+  OMX_ALG_VIDEO_HEVCProfileMain422_Intra,
+  OMX_ALG_VIDEO_HEVCProfileMain422_10_Intra,
+  OMX_ALG_VIDEO_HEVCProfileMain422_12_Intra,
+  OMX_ALG_VIDEO_HEVCProfileMain444_Intra,
+  OMX_ALG_VIDEO_HEVCProfileMain444_10_Intra,
+  OMX_ALG_VIDEO_HEVCProfileMain444_12_Intra,
+  OMX_ALG_VIDEO_HEVCProfileMain444_16_Intra,
+  OMX_ALG_VIDEO_HEVCProfileMain444_Still,
+  OMX_ALG_VIDEO_HEVCProfileMain444_16_Still,
+  OMX_ALG_VIDEO_HEVCProfileHighThroughtPut444_16_Intra,
+  OMX_ALG_VIDEO_HEVCProfileMaxEnum = 0x7FFFFFFF,
+} OMX_ALG_VIDEO_HEVCPROFILETYPE;
+
+typedef struct OMX_ALG_VIDEO_PARAM_HEVCTYPE {
+    OMX_U32 nSize;
+    OMX_VERSIONTYPE nVersion;
+    OMX_U32 nPortIndex;
+    OMX_U32 bConstIpred;
+    OMX_U32 eLoopFilterMode;
+    OMX_ALG_VIDEO_HEVCPROFILETYPE eProfile;
+    OMX_ALG_VIDEO_HEVCLEVELTYPE eLevel;
+    OMX_U32 nPFrames;
+    OMX_U32 nBFrames;
+} OMX_ALG_VIDEO_PARAM_HEVCTYPE;
+
+
+typedef struct OMX_ALG_VIDEO_PARAM_INSTANTANEOUS_DECODING_REFRESH {
+    OMX_U32 nSize;
+    OMX_VERSIONTYPE nVersion;
+    OMX_U32 nPortIndex;
+    OMX_U32 nInstantaneousDecodingRefreshFrequency;
+} OMX_ALG_VIDEO_PARAM_INSTANTANEOUS_DECODING_REFRESH;
+
+typedef struct OMX_VIDEO_PARAM_HEVCTYPE {
+    OMX_U32 nSize;
+    OMX_VERSIONTYPE nVersion;
+    OMX_U32 nPortIndex;
+    OMX_VIDEO_HEVCPROFILETYPE eProfile;
+    OMX_VIDEO_HEVCLEVELTYPE eLevel;
+} OMX_VIDEO_PARAM_HEVCTYPE;
+
+
+
+
+/* **************************************************/
+// zhichao.zhang add
+
+typedef struct OMX_ALG_VIDEO_CONFIG_INSERT
+{
+  OMX_U32 nSize;
+  OMX_VERSIONTYPE nVersion;
+  OMX_U32 nPortIndex;
+} OMX_ALG_VIDEO_CONFIG_INSERT;
+
+
+/** AVC Extended profiles */
+typedef enum OMX_ALG_VIDEO_AVCPROFILETYPE
+{
+  OMX_ALG_VIDEO_AVCProfileUnused = 0x7F000000,
+  OMX_ALG_VIDEO_AVCProfileConstrainedBaseline,
+  OMX_ALG_VIDEO_AVCProfileProgressiveHigh,
+  OMX_ALG_VIDEO_AVCProfileConstrainedHigh,
+  OMX_ALG_VIDEO_AVCProfileHigh10_Intra,
+  OMX_ALG_VIDEO_AVCProfileHigh422_Intra,
+  OMX_ALG_VIDEO_AVCProfileHigh444_Intra,
+  OMX_ALG_VIDEO_AVCProfileCAVLC444_Intra,
+  OMX_ALG_VIDEO_AVCProfileMaxEnum = 0x7FFFFFFF,
+}OMX_ALG_VIDEO_AVCPROFILETYPE;
+
+#define OMX_ALG_IndexParamVideoInterlaceFormatSupported 0x07000031 /**< reference: OMX_INTERLACEFORMATTYPE */
+
+typedef enum OMX_ALG_INDEXTYPE
+{
+  /* Component parameters and configurations */
+  OMX_ALG_IndexVendorComponentStartUnused = 0x7F000000 + 0x00100000,
+  OMX_ALG_IndexParamReportedLatency,                  /**< reference: OMX_ALG_PARAM_REPORTED_LATENCY */
+  OMX_ALG_IndexParamPreallocation,                    /**< reference: OMX_ALG_PARAM_PREALLOCATION */
+
+  /* Port parameters and configurations */
+  OMX_ALG_IndexVendorPortStartUnused = 0x7F000000 + 0x00200000,
+  OMX_ALG_IndexPortParamBufferMode,                   /**< reference: OMX_ALG_PORT_PARAM_BUFFER_MODE */
+
+  /* Vendor Video parameters */
+  OMX_ALG_IndexParamVendorVideoStartUnused = 0x7F000000 + 0x00300000,
+  OMX_ALG_IndexParamVideoHevc,                        /**< reference: OMX_ALG_VIDEO_PARAM_HEVCTYPE */
+  OMX_ALG_IndexParamVideoVp9,                         /**< reference: OMX_ALG_VIDEO_PARAM_VP9TYPE */
+  OMX_ALG_IndexParamVideoGopControl,                  /**< reference: OMX_ALG_VIDEO_PARAM_GOP_CONTROL */
+  OMX_ALG_IndexParamVideoSlices,                      /**< reference: OMX_ALG_VIDEO_PARAM_SLICES */
+  OMX_ALG_IndexParamVideoSceneChangeResilience,       /**< reference: OMX_ALG_VIDEO_PARAM_SCENE_CHANGE_RESILIENCE */
+  OMX_ALG_IndexParamVideoPrefetchBuffer,              /**< reference: OMX_ALG_VIDEO_PARAM_PREFETCH_BUFFER */
+  OMX_ALG_IndexParamVideoCodedPictureBuffer,          /**< reference: OMX_ALG_VIDEO_PARAM_CODED_PICTURE_BUFFER */
+  OMX_ALG_IndexParamVideoQuantizationControl,         /**< reference: OMX_ALG_VIDEO_PARAM_QUANTIZATION_CONTROL */
+  OMX_ALG_IndexParamVideoQuantizationExtension,       /**< refenrece: OMX_ALG_VIDEO_PARAM_QUANTIZATION_EXTENSION */
+  OMX_ALG_IndexParamVideoScalingList,                 /**< reference: OMX_ALG_VIDEO_PARAM_SCALING_LIST */
+  OMX_ALG_IndexParamVideoDecodedPictureBuffer,        /**< reference: OMX_ALG_VIDEO_PARAM_DECODED_PICTURE_BUFFER */
+  OMX_ALG_IndexParamVideoInternalEntropyBuffers,      /**< reference: OMX_ALG_VIDEO_PARAM_INTERNAL_ENTROPY_BUFFERS */
+  OMX_ALG_IndexParamVideoLowBandwidth,                /**< reference: OMX_ALG_VIDEO_PARAM_LOW_BANDWIDTH */
+  OMX_ALG_IndexParamVideoAspectRatio,                 /**< reference: OMX_ALG_VIDEO_PARAM_ASPECT_RATIO */
+  OMX_ALG_IndexParamVideoSubframe,                    /**< reference: OMX_ALG_VIDEO_PARAM_SUBFRAME */
+  OMX_ALG_IndexParamVideoInstantaneousDecodingRefresh,/**< reference: OMX_ALG_VIDEO_PARAM_INSTANTANEOUS_DECODING_REFRESH */
+  OMX_ALG_IndexParamVideoMaxBitrate,                  /**< reference: OMX_ALG_VIDEO_PARAM_MAX_BITRATE */
+  OMX_ALG_IndexParamVideoFillerData,                  /**< reference: OMX_ALG_VIDEO_PARAM_FILLER_DATA */
+  OMX_ALG_IndexParamVideoBufferMode,                  /**< reference: OMX_ALG_VIDEO_PARAM_BUFFER_MODE */
+  OMX_ALG_IndexParamVideoInterlaceFormatCurrent,      /**< reference: OMX_INTERLACEFORMATTYPE */
+  OMX_ALG_IndexParamVideoLongTerm,                    /**< reference: OMX_ALG_VIDEO_PARAM_LONG_TERM */
+  OMX_ALG_IndexParamVideoLookAhead,                    /**< reference: OMX_ALG_VIDEO_PARAM_LOOKAHEAD */
+
+  /* Vendor Video configrations */
+  OMX_ALG_IndexConfigVendorVideoStartUnused = 0x7F000000 + 0x00380000,
+  OMX_ALG_IndexConfigVideoInsertInstantaneousDecodingRefresh, /**< reference: OMX_ALG_VIDEO_CONFIG_INSERT */
+  OMX_ALG_IndexConfigVideoGroupOfPictures,                    /**< reference: OMX_ALG_VIDEO_CONFIG_GROUP_OF_PICTURES */
+  OMX_ALG_IndexConfigVideoRegionOfInterest,                   /**< reference: OMX_ALG_VIDEO_CONFIG_REGION_OF_INTEREST */
+  OMX_ALG_IndexConfigVideoNotifySceneChange,                  /**< reference: OMX_ALG_VIDEO_CONFIG_NOTIFY_SCENE_CHANGE */
+  OMX_ALG_IndexConfigVideoInsertLongTerm,                     /**< reference: OMX_ALG_VIDEO_CONFIG_INSERT */
+  OMX_ALG_IndexConfigVideoUseLongTerm,                        /**< reference: OMX_ALG_VIDEO_CONFIG_INSERT */
+
+  /* Vender Image & Video common configurations */
+  OMX_ALG_IndexVendorCommonStartUnused = 0x7F000000 + 0x00700000,
+  OMX_ALG_IndexParamCommonSequencePictureModeCurrent,               /**< reference: OMX_ALG_COMMON_PARAM_SEQUENCE_PICTURE_MODE */
+  OMX_ALG_IndexParamCommonSequencePictureModeQuerySupported,        /**< reference: OMX_ALG_COMMON_PARAM_SEQUENCE_PICTURE_MODE */
+  OMX_ALG_IndexParamVideoTwoPass,
+  OMX_ALG_IndexParamVideoColorPrimaries,
+  OMX_ALG_IndexParamVideoSkipFrame,
+  OMX_ALG_IndexConfigVideoNotifyResolutionChange,
+  OMX_ALG_IndexConfigVideoInsertPrefixSEI,
+  OMX_ALG_IndexConfigVideoInsertSuffixSEI,
+  OMX_ALG_IndexConfigVideoQuantizationParameterTable,
+
+  OMX_ALG_IndexMaxEnum = 0x7FFFFFFF,
+} OMX_ALG_INDEXTYPE;
+
 
 #ifdef __cplusplus
 }
-- 
2.17.1

