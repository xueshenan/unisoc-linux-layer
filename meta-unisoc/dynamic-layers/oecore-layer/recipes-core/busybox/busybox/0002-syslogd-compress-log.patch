# SPDX-FileCopyrightText: 2019-2021 Unisoc (Shanghai) Technologies Co., Ltd.
#
# SPDX-License-Identifier: LicenseRef-Unisoc-General-1.0

diff --git a/sysklogd/syslogd.c b/sysklogd/syslogd.c
index c3e46a3..5d4e524 100644
--- a/sysklogd/syslogd.c
+++ b/sysklogd/syslogd.c
@@ -164,6 +164,7 @@
 #define _PATH_LOG	"/dev/log"
 #endif
 
+#include <stdlib.h>
 #include <sys/un.h>
 #include <sys/uio.h>
 
@@ -762,6 +763,16 @@ static void log_locally(time_t now, char *msg, logFile_t *log_file)
 
 #if ENABLE_FEATURE_ROTATE_LOGFILE
 	if (G.logFileSize && log_file->isRegular && log_file->size > G.logFileSize) {
+	#if 1
+               int i = strlen(log_file->path) + 5 + 1;
+               char tmpFile[i];
+               char rotateCmd[100];
+               sprintf(tmpFile, "%s%s", log_file->path, ".tmp");
+               rename(log_file->path, tmpFile);
+               sprintf(rotateCmd, "syslogctl --logrotate %s &", log_file->path);
+               system(rotateCmd);
+	#else
+
 		if (G.logFileRotate) { /* always 0..99 */
 			int i = strlen(log_file->path) + 3 + 1;
 			char oldFile[i];
@@ -778,7 +789,7 @@ static void log_locally(time_t now, char *msg, logFile_t *log_file)
 			/* newFile == "f.0" now */
 			rename(log_file->path, newFile);
 		}
-
+	#endif
 		/* We may or may not have just renamed the file away;
 		 * if we didn't rename because we aren't keeping any backlog,
 		 * then it's time to clobber the file. If we did rename it...,
@@ -912,7 +923,7 @@ static void timestamp_and_log_internal(const char *msg)
 	/* -L, or no -R */
 	if (ENABLE_FEATURE_REMOTE_LOG && !(option_mask32 & OPT_locallog))
 		return;
-	timestamp_and_log(LOG_SYSLOG | LOG_INFO, (char*)msg, 0);
+ 	timestamp_and_log(LOG_SYSLOG | LOG_CRIT, (char*)msg, 0);	
 }
 
 /* tmpbuf[len] is a NUL byte (set by caller), but there can be other,
-- 
2.17.1

