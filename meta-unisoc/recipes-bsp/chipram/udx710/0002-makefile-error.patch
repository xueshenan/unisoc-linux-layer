diff --git a/Makefile b/Makefile
index 197806f..8e6aea6 100644
--- a/Makefile
+++ b/Makefile
@@ -50,7 +50,7 @@ include  $(TOPDIR)/nand_fdl/board/$(VENDOR)/$(SOC)/config.mk
 
 # Add GCC lib
 #ifndef CONFIG_X86
-PLATFORM_LIBGCC = -L $(shell dirname `$(CC) $(CFLAGS) -print-libgcc-file-name`) -lgcc
+PLATFORM_LIBGCC = -L $(shell dirname `$(CC) $(CFLAGS) -print-libgcc-file-name`)
 #endif
 PLATFORM_LIBS += $(PLATFORM_LIBGCC)
 export PLATFORM_LIBS
diff --git a/ddr/ddr_init/init/ddrc/r1p1_orca/ddrc_r1p1_common.c b/ddr/ddr_init/init/ddrc/r1p1_orca/ddrc_r1p1_common.c
index 365c0f1..3e00f82 100644
--- a/ddr/ddr_init/init/ddrc/r1p1_orca/ddrc_r1p1_common.c
+++ b/ddr/ddr_init/init/ddrc/r1p1_orca/ddrc_r1p1_common.c
@@ -63,7 +63,7 @@ static void isync(void)
 	dmc_sprd_delay(5);
 }
 
-void inline ddrc_force_rd_fifo_reset(void)
+void ddrc_force_rd_fifo_reset(void)
 {
 	//bit[23]
 	//0:normal operating
diff --git a/include/security/sprd_ce_r2p0lite.h b/include/security/sprd_ce_r2p0lite.h
index 7b88f16..d5c12ae 100644
--- a/include/security/sprd_ce_r2p0lite.h
+++ b/include/security/sprd_ce_r2p0lite.h
@@ -102,13 +102,13 @@ typedef struct {
 	uint32_t			:32;
 
 	/* offset 0x50 */
-	uint32_t pka_instr_addr_lo;
+	uint64_t pka_instr_addr_lo;
 
 	/* offset 0x54 */
-	uint32_t pka_store_addr_hi;
+	uint64_t pka_store_addr_hi;
 
 	/* offset 0x64 */
-	uint32_t pka_load_addr_hi;
+	uint64_t pka_load_addr_hi;
 } sprd_ce_pka_data_t;
 
 typedef struct {
@@ -176,7 +176,7 @@ typedef struct {
 } sprd_ce_algo_pka_t;
 
 typedef struct {
-	uint32_t algo;
+	uint64_t algo;
 
 	union {
 		sprd_ce_algo_aes_t aes;
@@ -188,10 +188,10 @@ typedef struct {
 	sprd_ce_cfg_t ce_cfg;
 
 	/* offset 0x508 */
-	uint32_t rcv_addr_lo;
+	uint64_t rcv_addr_lo;
 
 	/* offset 0x50C */
-	uint32_t dump_addr_lo;
+	uint64_t dump_addr_lo;
 
 	/* offset 0x510 */
 	struct {
diff --git a/include/security/sprd_crypto_r3p0.h b/include/security/sprd_crypto_r3p0.h
index 7e36a20..1f1edb9 100644
--- a/include/security/sprd_crypto_r3p0.h
+++ b/include/security/sprd_crypto_r3p0.h
@@ -66,7 +66,7 @@ enum sprd_crypto_status {
 	SPRD_CRYPTO_ERR_RESULT,			/* Bad result of test crypto */
 };
 
-typedef uint32_t			sprd_crypto_algo_t;
+typedef uint64_t			sprd_crypto_algo_t;
 #define SPRD_CRYPTO_AES			0x00000000
 #define SPRD_CRYPTO_AES_ECB		(SPRD_CRYPTO_AES + 0x0000)
 #define SPRD_CRYPTO_AES_CBC		(SPRD_CRYPTO_AES + 0x0001)
@@ -153,13 +153,13 @@ enum sprd_verify_res {
 };
 
 typedef struct {
-	uint32_t decrypt;
+	uint64_t decrypt;
 	uint8_t *key1;
-	uint32_t key1_len;
+	uint64_t key1_len;
 	uint8_t *key2;
-	uint32_t key2_len;
+	uint64_t key2_len;
 	uint8_t *iv;
-	uint32_t iv_len;
+	uint64_t iv_len;
 } sprd_aes_context_t;
 
 typedef struct {
@@ -168,14 +168,14 @@ typedef struct {
 typedef struct {
 	uint8_t *key_n;
 	uint8_t *key_eod;	//e or d
-	uint32_t key_len;
+	uint64_t key_len;
 	uint32_t pka_cmd[SPRD_CRYPTO_PKA_CMD_LEN];
 } sprd_rsa_context_t;
 
 typedef struct {
 	sprd_crypto_algo_t algo;
-	uint32_t continued;
-	uint32_t end;
+	uint64_t continued;
+	uint64_t end;
 
 	union
 	{
@@ -185,18 +185,18 @@ typedef struct {
 	} info;
 
 	uint8_t *in;
-	uint32_t in_len;
+	uint64_t in_len;
 	uint8_t *out;	//e or d
-	uint32_t out_len;
+	uint64_t out_len;
 } sprd_crypto_context_t;
 
 sprd_crypto_err_t sprd_crypto_do(
-        uint32_t algo,
-        uint8_t *in,   uint32_t in_len,
-        uint8_t *out,  uint32_t *out_len,
-        uint8_t *key1, uint32_t key1_len,
-	uint8_t *key2, uint32_t key2_len,
-        uint8_t *iv,   uint32_t iv_len);
+		uint32_t algo,
+		uint8_t *in,   uint32_t in_len,
+		uint8_t *out,  uint32_t *out_len,
+		uint8_t *key1, uint32_t key1_len,
+		uint8_t *key2, uint32_t key2_len,
+		uint8_t *iv,   uint32_t iv_len);
 
 #define sprd_pal_memcpy sec_memcpy
 #define sprd_pal_memset sec_memset
@@ -239,7 +239,7 @@ typedef struct {
 		struct {
 			sprd_crypto_algo_t type;
 			const uint8_t *lparam;
-			uint32_t lparamlen;
+			uint64_t lparamlen;
 		} rsaes_oaep;
 
 		struct {
@@ -249,7 +249,7 @@ typedef struct {
 		struct {
 			sprd_crypto_algo_t type;   /* sha1/sha224/sha256/sha384/sha512 */
 			sprd_crypto_algo_t mgf1_hash_type;   /* sha1/sha224/sha256/sha384/sha512 */
-			uint32_t salt_len;
+			uint64_t salt_len;
 		} rsassa_pss;
 	} pad;
 } sprd_rsa_padding_t;
@@ -257,8 +257,8 @@ typedef struct {
 typedef struct {
 	uint8_t *n;       /* Modulus */
 	uint8_t *e;       /* Public exponent */
-	uint32_t  n_len;
-	uint32_t  e_len;
+	uint64_t  n_len;
+	uint64_t  e_len;
 } sprd_rsa_pubkey_t;
 
 /*
@@ -268,9 +268,9 @@ typedef struct {
  * sig_size[in]: the length of the signature data (byte)
  */
 sprd_crypto_err_t sprd_rsa_verify(const sprd_rsa_pubkey_t *pub_key,
-                      const uint8_t *dig, uint32_t dig_size,
-                      const uint8_t *sig, uint32_t sig_size,
-                      sprd_rsa_padding_t padding, int32_t *result);
+		const uint8_t *dig, uint32_t dig_size,
+		const uint8_t *sig, uint32_t sig_size,
+		sprd_rsa_padding_t padding, int32_t *result);
 
 sprd_crypto_err_t sprd_crypto_test (void);
 
diff --git a/secure/sprd/sprd_crypto_r2p0lite.c b/secure/sprd/sprd_crypto_r2p0lite.c
index 0d7c1d3..5716b24 100644
--- a/secure/sprd/sprd_crypto_r2p0lite.c
+++ b/secure/sprd/sprd_crypto_r2p0lite.c
@@ -25,12 +25,12 @@
 static int32_t s_status = false;
 
 sprd_crypto_err_t sprd_crypto_do(
-        uint32_t algo,
-        uint8_t *in,   uint32_t in_len,
-        uint8_t *out,  uint32_t *out_len,
-        uint8_t *key1, uint32_t key1_len,
-	uint8_t *key2, uint32_t key2_len,
-        uint8_t *iv,   uint32_t iv_len) {
+		uint32_t algo,
+		uint8_t *in,   uint32_t in_len,
+		uint8_t *out,  uint32_t *out_len,
+		uint8_t *key1, uint32_t key1_len,
+		uint8_t *key2, uint32_t key2_len,
+		uint8_t *iv,   uint32_t iv_len) {
 
 	uint32_t err = SPRD_CRYPTO_SUCCESS;
 	sprd_crypto_context_t context;
